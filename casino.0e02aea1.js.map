{"mappings":"AAAA,MAAMA,EAAYC,SAASC,cAAc,YACnCC,EAAMF,SAASC,cAAc,QAC7BE,EAAUH,SAASC,cAAc,aACjCG,EAAaJ,SAASC,cAAc,eAG1CC,EAAIG,iBAAiB,SAKrB,SAAiBC,GACbJ,EAAIK,UAAW,EACfC,EAAS,GACTC,EAAU,GACV,MAAMC,EAAQX,EAAUY,SACxB,IAAIC,EAAQ,EACZC,QAAQC,IAAIJ,GACZ,MAAMK,EAAM,IAAIL,GAEhBK,EAAIC,SAAQC,IACRA,EAAKC,kBAAkBC,YAAc,GACrCF,EAAKC,kBAAkBE,UAAUC,OAAO,WACxCJ,EAAKC,kBAAkBE,UAAUC,OAAO,SACvCJ,EAAKC,kBAAkBE,UAAUC,OAAO,OACzClB,EAAQiB,UAAUC,OAAO,cACzBjB,EAAWgB,UAAUC,OAAO,aAAa,IAG7CN,EAAIC,SAAQC,IACRL,GAAS,IACTU,YAAW,MAOnB,SAAuBC,GACnB,MAAMC,EAAgBC,KAAKC,SAAW,GACtCb,QAAQC,IAAIU,GACL,IAAIG,SAAQ,CAACC,EAASC,KACrBL,EACAI,EAAQ,GACHC,EAAO,EAAE,IACnBC,MAAMC,IACLlB,QAAQC,IAAIiB,GACZR,EAAKL,kBAAkBE,UAAUY,IAAI,WACrCT,EAAKL,kBAAkBC,YAAcY,EACxB,IAATA,IACAvB,EAAOyB,KAAKF,GACZlB,QAAQC,IAAIN,G,IAMf0B,OAAOH,IACJlB,QAAQC,IAAIiB,GACTR,EAAKL,kBAAkBE,UAAUY,IAAI,WACxCT,EAAKL,kBAAkBC,YAAcY,EAClC,IAATA,IACMtB,EAAQwB,KAAKF,GACblB,QAAQC,IAAIL,G,IAKf0B,SAAQ,KAELb,YAAW,KAEP,GADGpB,EAAIK,UAAW,EACI,IAAlBC,EAAO4B,QAAmC,IAAnB3B,EAAQ2B,OAAc,CAC7CjC,EAAQiB,UAAUY,IAAI,cACrB,MAAMtB,EAAQX,EAAUY,SACzCE,QAAQC,IAAIJ,GACA,IAAIA,GACQM,SAAQC,GAAQA,EAAKC,kBAAkBE,UAAUY,IAAI,U,MAW5D,GAAsB,IAAlBxB,EAAO4B,QAAmC,IAAnB3B,EAAQ2B,QAAkC,IAAlB5B,EAAO4B,QAAmC,IAAnB3B,EAAQ2B,OACvF,CACIhC,EAAWgB,UAAUY,IAAI,cACzB,MAAMtB,EAAQX,EAAUY,SACxCE,QAAQC,IAAIJ,GACA,IAAIA,GACQM,SAAQC,GAAQA,EAAKC,kBAAkBE,UAAUY,IAAI,Q,IAUlE,IAAK,G,CAxERK,CAAcpB,EAAK,GACpBL,EAAM,G,IAzBjB,IA8II0B,EA9IA9B,EAAS,GACTC,EAAU,GAgJd8B,MAAM,8CACHT,MAAKU,GAAYA,EAASC,SAC1BX,MAAKY,IACJ7B,QAAQC,IAAI,+BAAgC4B,GAG5CJ,EAAiBI,EAGjB7B,QAAQC,IAAI,yCAA0CwB,EAAe,IAIzEzB,QAAQC,IAAI,iCAAkCwB","sources":["src/casino.js"],"sourcesContent":["const container = document.querySelector(\".wrapper\");\nconst btn = document.querySelector(\".btn\");\nconst winText = document.querySelector(\".text_won\");\nconst loooseText = document.querySelector(\".text_loose\");\n\n\nbtn.addEventListener(\"click\", onClick);\n\nlet winner = [];\nlet winner1 = [];\n\nfunction onClick(evt) {\n    btn.disabled = true;\n    winner = [];\n    winner1 = [];\n    const items = container.children;\n    let delay = 0;\n    console.log(items)\n    const arr = [...items]\n\n    arr.forEach(item => {\n        item.firstElementChild.textContent = \"\";\n        item.firstElementChild.classList.remove(\"appears\");\n        item.firstElementChild.classList.remove(\"cross\");\n         item.firstElementChild.classList.remove(\"red\");\n        winText.classList.remove(\"text_apear\");\n        loooseText.classList.remove(\"text_apear\")\n    }\n    )\n    arr.forEach(item => {\n        delay += 1000;\n        setTimeout(() => {\n            createPromise(item)\n        }, delay)\n    });\n\n}\n\nfunction createPromise(item) {\n    const shouldResolve = Math.random() > 0.5;\n    console.log(shouldResolve)\n    return new Promise((resolve, reject) => {\n        if (shouldResolve) {\n            resolve(1)\n        } else { reject(2) }\n    }).then((data) => {\n        console.log(data)\n        item.firstElementChild.classList.add(\"appears\")\n        item.firstElementChild.textContent = data\n        if (data === 1) {\n            winner.push(data);\n            console.log(winner)\n        }\n\n\n\n    })\n        .catch((data) => {\n            console.log(data)\n               item.firstElementChild.classList.add(\"appears\")\n            item.firstElementChild.textContent = data;\n  if (data === 2) {\n            winner1.push(data);\n            console.log(winner1)\n        }\n        \n\n        })\n        .finally(() => {\n             \n            setTimeout(() => {\n                   btn.disabled = false;\n                if (winner.length === 3 || winner1.length === 3) {\n                    winText.classList.add(\"text_apear\")\n                     const items = container.children;\n    console.log(items)\n    const arr = [...items]\n                        arr.forEach(item => item.firstElementChild.classList.add(\"cross\"))  \n                   \n                    \n                // alert(\"You have won!!!\")\n    //               setTimeout(() => {\n    //                   const items = container.children;\n    // console.log(items)\n    // const arr = [...items]\n    // arr.forEach(item => item.firstElementChild.textContent = \"\")     \n    //                 },1000)\n                 }\n                else if (winner.length === 2 && winner1.length === 1 || winner.length === 1 && winner1.length === 2)\n                {\n                    loooseText.classList.add(\"text_apear\")\n                    const items = container.children;\n    console.log(items)\n    const arr = [...items]\n                        arr.forEach(item => item.firstElementChild.classList.add(\"red\"))  \n                    // alert(\"You loose(((\")\n    //                 setTimeout(() => {\n    //                   const items = container.children;\n    // console.log(items)\n    // const arr = [...items]\n    // arr.forEach(item => item.firstElementChild.textContent = \"\")     \n    //                 },1000)\n              \n            }\n            }, 3000)\n           \n    })\n}\n\n\n\n// promise.then((data) => {\n//  console.log(data)  \n// })\n//     .catch((data) => {\n//     console.log(data)\n//     })\n//     .finally(() => {\n//         setTimeout(()=>{    console.log(\"The end\")}, 1000)\n\n//     })\n\nfunction createPromises() {\n       const promise = new Promise((res, rej) => {\n    const random = Math.random() > 0.5\n    setTimeout(() => {\n         if (random) {\n        res(\"yes\")\n    } else {\n        rej(\"no\")\n    } \n    },3000)\n  \n       }) \n    return promise\n}\n    \n\n// const p = createPromises();\n// p.then((data) => {\n//  console.log(data)  \n// })\n//     .catch((data) => {\n//     console.log(data)\n//     })\n//     .finally(() => {\n//         setTimeout(()=>{    console.log(\"The end\")}, 1000)\n\n//     })\n\nlet globalVariable; // undefined\n\n// Initializing data fetching\nfetch(\"https://jsonplaceholder.typicode.com/users\")\n  .then(response => response.json())\n  .then(users => {\n    console.log(\"users inside then callback: \", users);\n\n    // Writing the result to a global variable\n    globalVariable = users;\n\n    // Everything is ok here, the data is in the variable\n    console.log(\"globalVariable inside fetch callback: \", globalVariable);\n  });\n\n// No async data here\nconsole.log(\"globalVariable outside fetch: \", globalVariable); // undefined\n"],"names":["$d9042fb7338065c0$var$container","document","querySelector","$d9042fb7338065c0$var$btn","$d9042fb7338065c0$var$winText","$d9042fb7338065c0$var$loooseText","addEventListener","evt","disabled","$d9042fb7338065c0$var$winner","$d9042fb7338065c0$var$winner1","items","children","delay","console","log","arr","forEach","item","firstElementChild","textContent","classList","remove","setTimeout","item1","shouldResolve","Math","random","Promise","resolve","reject","then","data","add","push","catch","finally","length","$d9042fb7338065c0$var$createPromise","$d9042fb7338065c0$var$globalVariable","fetch","response","json","users"],"version":3,"file":"casino.0e02aea1.js.map"}